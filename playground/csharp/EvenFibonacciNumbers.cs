/*
 * Problem 2: Even Fibonacci Numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four
 * million, find the sum of the even-valued terms.
 *
 * https://projecteuler.net/problem=2
 */

using System;

namespace EvenFibonacciNumbers
{
    class Program
    {
        static int evenFibonacciNumbers(int x, int y, int sequence_sum)
        {
            if (y >= 4000000)
            {
                return sequence_sum;
            }
            else
            {
                int z = x + y;  // Get the next number in the fibonacci sequence.
                if (z % 2 == 0)  // Check if z is an even number.
                {
                    sequence_sum += z;  // Add z to sequence_sum.
                }

                return evenFibonacciNumbers(y, z, sequence_sum);
            }
        }
        static void Main(string[] args)
        {
            // Give the default values of `evenFibonacciNumbers()` method.
            // `sequence_sum` is already 2 because the method won't be
            // evaluating the value of `y` in the first method call.
            Console.WriteLine(evenFibonacciNumbers(1, 2, 2));
        }
    }
}
